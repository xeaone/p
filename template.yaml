AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3
    LoggingConfig:
      LogFormat: JSON

Parameters:
  MyRegion:
    Default: us-east-1
    Type: String
  MyAppName:
    Default: notes
    Type: String
  MyStageName:
    Default: Pro
    Type: String

Resources:

  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Ref MyAppName
      StageName: !Ref MyStageName
      Auth:
        Authorizers:
            CognitoAuthorizer:
              UserPoolArn: !GetAtt UserPool.Arn

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref MyAppName
      Policies:
        PasswordPolicy:
          MinimumLength: 6
      AutoVerifiedAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref MyAppName
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  Database:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref MyAppName
      AttributeDefinitions:
        - AttributeName: user
          AttributeType: S
        - AttributeName: note
          AttributeType: S
      KeySchema:
        - AttributeName: user
          KeyType: HASH
        - AttributeName: note
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref MyAppName
      CodeUri: notes/
      Handler: server.main
      Runtime: nodejs20.x
      Environment:
        Variables:
          region: !Ref MyRegion
          TableName: !Ref MyAppName
          UserPoolId: !Ref UserPool
          ClientId: !Ref UserPoolClient
      Policies:
        - Statement:
          - Sid: NoteUserPoolPolicy
            Effect: Allow
            Action:
              - cognito-idp:SignUp
              - cognito-idp:InitiateAuth
              - cognito-idp:AdminConfirmSignUp
            Resource: '*'
        - Statement:
          - Sid: NoteDatabasePolicy
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:DeleteItem
              - dynamodb:PutItem
              - dynamodb:Query
            Resource: '*'
      Events:
        # Api:
        #   Type: Api
        #   Properties:
        #     Path: /api/{any+}
        #     Method: any
        #     RestApiId: !Ref Api
        #     Auth:
        #       Authorizer: CognitoAuthorizer
        Root:
          Type: Api
          Properties:
            Path: /
            Method: any
            RestApiId: !Ref Api
        Any:
          Type: Api
          Properties:
            Path: /{any+}
            Method: any
            RestApiId: !Ref Api

Outputs:
  Api:
    Description: "URL of the API Gateway"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${MyStageName}/"
  UserPool:
    Description: "ID of the Cognito User Pool"
    Value: !Ref UserPool
  UserPoolClient:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref UserPoolClient